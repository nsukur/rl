C:" This file was automatically converted from microjava bytecode
    using mjc2wsl v1.1.0
   -options:
    popPush        (pp/ht):true
    localVarBlocks (lo/gl):true
    localsAsArrays (ar/sp):false
    inlinePrint:           false
";

BEGIN
VAR <
	
	mjvm_flag_jump := 0,
	mjvm_statics := ARRAY(1,0),
	mjvm_arrays := < >,
	mjvm_objects := < >,
	mjvm_estack := < >, mjvm_mstack := < > > :
SKIP;
 ACTIONS a149 :
 a14 ==
PUSH(mjvm_mstack,mjvm_locals_0);
PUSH(mjvm_mstack,mjvm_locals_1);
POP(mjvm_locals_0, mjvm_estack);
CALL a17
 END
 a17 ==
mjvm_objects := mjvm_objects ++ < ARRAY(8,0) >;
PUSH(mjvm_estack,LENGTH(mjvm_objects));
CALL a20
 END
 a20 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a21
 END
 a21 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a22
 END
 a22 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a23
 END
 a23 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
mjvm_objects[tempb][1]:=tempa;
ENDVAR;
CALL a26
 END
 a26 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a27
 END
 a27 ==
PUSH(mjvm_estack,mjvm_statics[1]);
CALL a30
 END
 a30 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
mjvm_objects[tempb][2]:=tempa;
ENDVAR;
CALL a33
 END
 a33 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a34
 END
 a34 ==
POP(mjvm_statics[1], mjvm_estack);
CALL a37
 END
 a37 ==
POP(mjvm_locals_1, mjvm_mstack);
POP(mjvm_locals_0, mjvm_mstack);
CALL a38
 END
 a38 ==
SKIP
 END
 b38 ==
CALL a39
 END
 a39 ==
PUSH(mjvm_mstack,mjvm_locals_0);
CALL a42
 END
 a42 ==
PUSH(mjvm_estack,mjvm_statics[1]);
CALL a45
 END
 a45 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_0 := tempa;
ENDVAR;
CALL a46
 END
 a46 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a47
 END
 a47 ==
PUSH(mjvm_estack,0);
CALL a48
 END
 a48 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb = tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a65 ELSE CALL a51 FI;
SKIP
 END
 a51 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a52
 END
 a52 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
PUSH(mjvm_estack,mjvm_objects[tempa][1]);
ENDVAR;
CALL a55
 END
 a55 ==
PUSH(mjvm_estack,0);
CALL a56
 END
 a56 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ(tempb,tempa);
ENDVAR;
CALL a57
 END
 a57 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a58
 END
 a58 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
PUSH(mjvm_estack,mjvm_objects[tempa][2]);
ENDVAR;
CALL a61
 END
 a61 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_0 := tempa;
ENDVAR;
CALL a62
 END
 a62 ==
CALL a46;
SKIP
 END
 a65 ==
POP(mjvm_locals_0, mjvm_mstack);
CALL a66
 END
 a66 ==
SKIP
 END
 b66 ==
CALL a67
 END
 a67 ==
PUSH(mjvm_mstack,mjvm_locals_0);
PUSH(mjvm_mstack,mjvm_locals_1);
POP(mjvm_locals_0, mjvm_estack);
CALL a70
 END
 a70 ==
PUSH(mjvm_estack,mjvm_statics[1]);
CALL a73
 END
 a73 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a74
 END
 a74 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a75
 END
 a75 ==
PUSH(mjvm_estack,0);
CALL a76
 END
 a76 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb = tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a95 ELSE CALL a79 FI;
SKIP
 END
 a79 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a80
 END
 a80 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
PUSH(mjvm_estack,mjvm_objects[tempa][1]);
ENDVAR;
CALL a83
 END
 a83 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a84
 END
 a84 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb = tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a95 ELSE CALL a87 FI;
SKIP
 END
 a87 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a88
 END
 a88 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
PUSH(mjvm_estack,mjvm_objects[tempa][2]);
ENDVAR;
CALL a91
 END
 a91 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a92
 END
 a92 ==
CALL a74;
SKIP
 END
 a95 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a96
 END
 a96 ==
PUSH(mjvm_estack,0);
CALL a97
 END
 a97 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb = tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a106 ELSE CALL a100 FI;
SKIP
 END
 a100 ==
PUSH(mjvm_estack,1);
CALL a101
 END
 a101 ==
POP(mjvm_locals_1, mjvm_mstack);
POP(mjvm_locals_0, mjvm_mstack);
CALL a102
 END
 a102 ==
SKIP
 END
 b102 ==
CALL a103
 END
 a103 ==
CALL a109;
SKIP
 END
 a106 ==
PUSH(mjvm_estack,0);
CALL a107
 END
 a107 ==
POP(mjvm_locals_1, mjvm_mstack);
POP(mjvm_locals_0, mjvm_mstack);
CALL a108
 END
 a108 ==
SKIP
 END
 b108 ==
CALL a109
 END
 a109 ==
ERROR("Runtime error: trap(1)");
CALL a111
 END
 a111 ==
PUSH(mjvm_mstack,mjvm_locals_0);
PUSH(mjvm_mstack,mjvm_locals_1);
PUSH(mjvm_mstack,mjvm_locals_2);
POP(mjvm_locals_0, mjvm_estack);
CALL a114
 END
 a114 ==
PUSH(mjvm_estack,mjvm_statics[1]);
CALL a117
 END
 a117 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a118
 END
 a118 ==
PUSH(mjvm_estack,0);
CALL a119
 END
 a119 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_2 := tempa;
ENDVAR;
CALL a120
 END
 a120 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a121
 END
 a121 ==
PUSH(mjvm_estack,0);
CALL a122
 END
 a122 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb = tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a144 ELSE CALL a125 FI;
SKIP
 END
 a125 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a126
 END
 a126 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
PUSH(mjvm_estack,mjvm_objects[tempa][1]);
ENDVAR;
CALL a129
 END
 a129 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a130
 END
 a130 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb <> tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a136 ELSE CALL a133 FI;
SKIP
 END
 a133 ==
mjvm_locals_2 := mjvm_locals_2 + 1;
CALL a136
 END
 a136 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a137
 END
 a137 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
PUSH(mjvm_estack,mjvm_objects[tempa][2]);
ENDVAR;
CALL a140
 END
 a140 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a141
 END
 a141 ==
CALL a120;
SKIP
 END
 a144 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_2;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a145
 END
 a145 ==
POP(mjvm_locals_2, mjvm_mstack);
POP(mjvm_locals_1, mjvm_mstack);
POP(mjvm_locals_0, mjvm_mstack);
CALL a146
 END
 a146 ==
SKIP
 END
 b146 ==
CALL a147
 END
 a147 ==
ERROR("Runtime error: trap(1)");
CALL a149
 END
 a149 ==
PUSH(mjvm_mstack,mjvm_locals_0);
PUSH(mjvm_mstack,mjvm_locals_1);
PUSH(mjvm_mstack,mjvm_locals_2);
CALL a152
 END
 a152 ==
PUSH(mjvm_estack,108);
CALL a157
 END
 a157 ==
PUSH(mjvm_estack,0);
CALL a158
 END
 a158 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ_CHAR(tempb,tempa);
ENDVAR;
CALL a159
 END
 a159 ==
PUSH(mjvm_estack,63);
CALL a164
 END
 a164 ==
PUSH(mjvm_estack,0);
CALL a165
 END
 a165 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ_CHAR(tempb,tempa);
ENDVAR;
CALL a166
 END
 a166 ==
VAR < tempa := 0 > : 
@Read_Line_Proc(VAR tempa, Standard_Input_Port);
tempa := @String_To_Num(tempa);
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a167
 END
 a167 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_0 := tempa;
ENDVAR;
CALL a168
 END
 a168 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a169
 END
 a169 ==
PUSH(mjvm_estack,0);
CALL a170
 END
 a170 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb >= tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a211 ELSE CALL a173 FI;
SKIP
 END
 a173 ==
PUSH(mjvm_estack,1);
CALL a174
 END
 a174 ==
CALL a14;
CALL a177
 END
 a177 ==
PUSH(mjvm_estack,2);
CALL a178
 END
 a178 ==
CALL a14;
CALL a181
 END
 a181 ==
PUSH(mjvm_estack,3);
CALL a182
 END
 a182 ==
CALL a14;
CALL a185
 END
 a185 ==
PUSH(mjvm_estack,2);
CALL a186
 END
 a186 ==
CALL a14;
CALL a189
 END
 a189 ==
CALL a39;
CALL a192
 END
 a192 ==
PUSH(mjvm_estack,7);
CALL a197
 END
 a197 ==
CALL a67;
CALL a200
 END
 a200 ==
PUSH(mjvm_estack,0);
CALL a201
 END
 a201 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ(tempb,tempa);
ENDVAR;
CALL a202
 END
 a202 ==
PUSH(mjvm_estack,2);
CALL a203
 END
 a203 ==
CALL a111;
CALL a206
 END
 a206 ==
PUSH(mjvm_estack,0);
CALL a207
 END
 a207 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ(tempb,tempa);
ENDVAR;
CALL a208
 END
 a208 ==
CALL a287;
SKIP
 END
 a211 ==
PUSH(mjvm_estack,0);
CALL a212
 END
 a212 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_2 := tempa;
ENDVAR;
CALL a213
 END
 a213 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_2;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a214
 END
 a214 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_0;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a215
 END
 a215 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
IF tempb >= tempa THEN mjvm_flag_jump := 1 ELSE mjvm_flag_jump := 0 FI;
ENDVAR;
IF mjvm_flag_jump = 1 THEN CALL a240 ELSE CALL a218 FI;
SKIP
 END
 a218 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_2;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a219
 END
 a219 ==
PUSH(mjvm_estack,0);
CALL a220
 END
 a220 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ(tempb,tempa);
ENDVAR;
CALL a221
 END
 a221 ==
PUSH(mjvm_estack,63);
CALL a226
 END
 a226 ==
PUSH(mjvm_estack,0);
CALL a227
 END
 a227 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ_CHAR(tempb,tempa);
ENDVAR;
CALL a228
 END
 a228 ==
VAR < tempa := 0 > : 
@Read_Line_Proc(VAR tempa, Standard_Input_Port);
tempa := @String_To_Num(tempa);
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a229
 END
 a229 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a230
 END
 a230 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a231
 END
 a231 ==
CALL a14;
CALL a234
 END
 a234 ==
mjvm_locals_2 := mjvm_locals_2 + 1;
CALL a237
 END
 a237 ==
CALL a213;
SKIP
 END
 a240 ==
CALL a39;
CALL a243
 END
 a243 ==
PUSH(mjvm_estack,101);
CALL a248
 END
 a248 ==
PUSH(mjvm_estack,0);
CALL a249
 END
 a249 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ_CHAR(tempb,tempa);
ENDVAR;
CALL a250
 END
 a250 ==
PUSH(mjvm_estack,63);
CALL a255
 END
 a255 ==
PUSH(mjvm_estack,0);
CALL a256
 END
 a256 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ_CHAR(tempb,tempa);
ENDVAR;
CALL a257
 END
 a257 ==
VAR < tempa := 0 > : 
@Read_Line_Proc(VAR tempa, Standard_Input_Port);
tempa := @String_To_Num(tempa);
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a258
 END
 a258 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a259
 END
 a259 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a260
 END
 a260 ==
CALL a67;
CALL a263
 END
 a263 ==
PUSH(mjvm_estack,0);
CALL a264
 END
 a264 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ(tempb,tempa);
ENDVAR;
CALL a265
 END
 a265 ==
PUSH(mjvm_estack,99);
CALL a270
 END
 a270 ==
PUSH(mjvm_estack,0);
CALL a271
 END
 a271 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ_CHAR(tempb,tempa);
ENDVAR;
CALL a272
 END
 a272 ==
PUSH(mjvm_estack,63);
CALL a277
 END
 a277 ==
PUSH(mjvm_estack,0);
CALL a278
 END
 a278 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ_CHAR(tempb,tempa);
ENDVAR;
CALL a279
 END
 a279 ==
VAR < tempa := 0 > : 
@Read_Line_Proc(VAR tempa, Standard_Input_Port);
tempa := @String_To_Num(tempa);
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a280
 END
 a280 ==
VAR < tempa := 0 > : 
POP(tempa, mjvm_estack);
mjvm_locals_1 := tempa;
ENDVAR;
CALL a281
 END
 a281 ==
VAR < tempa := 0 > : 
tempa :=mjvm_locals_1;
PUSH(mjvm_estack,tempa);
ENDVAR;
CALL a282
 END
 a282 ==
CALL a111;
CALL a285
 END
 a285 ==
PUSH(mjvm_estack,0);
CALL a286
 END
 a286 ==
VAR < tempa := 0, tempb := 0 > : 
POP(tempa, mjvm_estack);
POP(tempb, mjvm_estack);
Print_MJ(tempb,tempa);
ENDVAR;
CALL a287
 END
 a287 ==
POP(mjvm_locals_2, mjvm_mstack);
POP(mjvm_locals_1, mjvm_mstack);
POP(mjvm_locals_0, mjvm_mstack);
CALL a288
 END
 a288 ==
SKIP
 END
 b288 ==
SKIP
 END
ENDACTIONS;

SKIP
ENDVAR

WHERE

FUNCT CHR(num) ==:
	(@List_To_String(< num >))
END

PROC Print_MJ(val, format VAR)==
PRINFLUSH(@Format(format, val ))
END

PROC Print_MJ_CHAR(val, format VAR)==
PRINFLUSH(@Format(format, CHR(val)))
END

END
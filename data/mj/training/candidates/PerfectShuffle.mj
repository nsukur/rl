program PerfectShuffle {
    // A perfect shuffle (or faro/weave shuffle) means splitting a deck of cards into equal halves, 
    // and perfectly interleaving them - so that you end up with the first card from the left half, 
    // followed by the first card from the right half, and so on

    void printArr(int[] array)
    int i;
    {
        print('[');
        i = 0;
        if (len(array) > 0) {
            print(array[i]);
            i++;
        }
        while(i < len(array)) {
            print(',');
            print(array[i], 3);
            i++;
        }
        print(']');
        print('\n');
    }

    int perfectShuffle(int size)
    int half, i, count, continue1, continue2;
    int[] original, arr1, arr2;
    {
        if (size % 2 != 0 || size == 0) {
            return -1;
        }
        half = size / 2;

        arr1 = new int[size];
        arr2 = new int[size];
        original = new int[size];
        i = 1;

        while (i <= size) {
            original[i-1] = i;
            arr1[i-1] = i;
            i++;
        }
        // print('\n');
        // print(0, 2);
        // print(':');
        // printArr(original);
        
        count = 1;
        continue1 = 1;
        while (continue1 == 1) {
            i = 0;
            while (i < len(arr1)) {
                arr2[i] = arr1[i];
                i++;
            }
            
            i = 0;
            while (i < half) {
                arr1[2 * i] = arr2[i];
                arr1[2 * i + 1] = arr2[i + half];
                i++;
            }
            // print(count, 2);
            // print(':');
            // printArr(arr1);
            
            i = 0;
            continue2 = 1;
            while(i < size && continue2 == 1) {
                if (original[i] != arr1[i]) {
                    continue2 = 0;
                } else {
                    if (i == size - 1) {
                        return count;
                    }
                }
                i++;
            }
            count++;
        }
    }
    
    void main()
    int[] sizes;
    int size, i;
    {
        // input the number of checks: let's say, 3
        // and then input the concrete values for which you want results 
        // e.g. [8, 24, 52] should give output 3, 11, 8

        // in case you want to see the intermediary steps, uncomment all prints
        
        print('n');
        print('?');
        
        read(size);
        i = 0;
        sizes = new int[size];
        while(i < size) {
            print('s');
            print(i);
            print('?');
            read(sizes[i]);
            i++;
        }

        i = 0;
        while (i < size) {
            print(sizes[i]);
            print(':');
            print(perfectShuffle(sizes[i]));
            print('\n');
            i++;
        }
    }
}